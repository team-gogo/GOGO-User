name: GOGO User stage CD Workflow

on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Gradle's permission
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: CD Success Notification
        uses: sarisia/actions-status-discord@v1
        if: success()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 0x4CAF50

      - name: CD Failure Notification
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 0xFF4C4C

  deploy:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key for deployment
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22

      - name: SSH Command to Deploy
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'

            mkdir -p /home/ubuntu/gogo-user
            cd /home/ubuntu/gogo-user

            if [ ! -d ".git" ]; then
              git clone -b develop https://github.com/team-gogo/gogo-user.git .
            else
              git pull origin develop
            fi

            docker build -f DockerFileStage -t gogo-user-stage .
            docker run -d -p 8081:8081 --name gogo-user-stage gogo-user-stage
          EOF
