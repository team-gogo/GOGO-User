name: GOGO User stage CD Workflow

on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Gradle's permission
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

  deploy:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sshpass and OpenSSH
        run: |
          sudo apt-get update && sudo apt-get install -y sshpass openssh-client

      - name: SSH Command to Deploy using Bastion and Target Instance
        run: |
          SSH_PRIVATE_KEY="${{ secrets.STAGE_BASTION_SSH_KEY }}"
          REMOTE_USER="ubuntu"
          BASTION_HOST="${{ secrets.STAGE_BASTION_HOST }}" 
          TARGET_HOST="${{ secrets.STAGE_TARGET_HOST }}" 

          echo "$SSH_PRIVATE_KEY" > bastion_key.pem
          chmod 600 bastion_key.pem

          ssh -i bastion_key.pem -o StrictHostKeyChecking=no -fNT -L 2222:$TARGET_HOST:22 $REMOTE_USER@$BASTION_HOST

          ssh -i bastion_key.pem -o StrictHostKeyChecking=no -p 2222 $REMOTE_USER@localhost << 'EOF'
            mkdir -p /home/ubuntu/gogo-user
            cd /home/ubuntu/gogo-user

            if [ ! -d ".git" ]; then
              git clone -b develop https://github.com/team-gogo/gogo-user.git .
            else
              git pull origin develop
            fi

            ./gradlew clean build

            docker build -f DockerFileStage -t gogo-user-stage .

            docker stop gogo-user-stage || true
            docker rm gogo-user-stage || true

            docker run -d -p 8081:8081 --add-host host.docker.internal:host-gateway --name gogo-user-stage gogo-user-stage
          EOF

      - name: SSH Success Notification
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 0x4CAF50
          title: "배포 성공"
          message: "GOGO User stage deployment completed successfully."

      - name: SSH Failure Notification
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          color: 0xFF4C4C
          title: "배포 실패"
          message: "GOGO User stage deployment failed. Check the logs for details."